#include <stdio.h>
#include<stdlib.h>
struct bid_struct {
    int company_name;
    int num_coal_blocks;
    int bid_value;
    int *coal_blocks;
};
int compare(int a[],int b[],int m,int n){
    int i,j;
    for (i=0,j=0;i<m&&j<n;){

            if (a[i]==b[j])return 0;
            else if(a[i]>=b[j])j++;
            else i++;
    }
    return 1;
}
void main(){
    //for file input
    char filename[255];
    scanf("%s",filename);
    FILE *fp;
    fp=fopen(filename,"r");
    // file now stored in fp
    int time_limit,no_coal_blocks,no_bids,no_companies;
    fscanf(fp,"%d %d %d %d",&time_limit,&no_coal_blocks,&no_bids,&no_companies);
    //taking T,N,B,C
    time_limit*=60;
    //converting time to seconds
    int test;
    ////printf("%d %d %d %d\n",time_limit,no_coal_blocks,no_bids,no_companies);
    int bids_companies[no_companies],bids_start_companies[no_companies];
    int i=0,j=0,k=0,temp,bid_num;
    struct bid_struct bids[no_bids];
    //allocating memory to pointers in struct
    for(i=0;i<no_bids;i++){
        bids[i].coal_blocks=malloc(no_coal_blocks*sizeof(int));
    }
    bids_start_companies[0]=0;

    for(i=0;i<no_companies;i++){
        fscanf(fp,"%d %d",&temp,&bids_companies[i]);
        if(i+1<no_companies){
            bids_start_companies[i+1]=bids_start_companies[i]+bids_companies[i];
        }
        for(j=0;j<bids_companies[i];j++){
            bid_num=bids_start_companies[i]+j;
            fscanf(fp,"%d %d %d",&bids[bid_num].company_name,&bids[bid_num].num_coal_blocks,&bids[bid_num].bid_value);
            bids[bid_num].company_name=bids[bid_num].company_name-1;
            for(k=0;k<bids[bid_num].num_coal_blocks;k++){
                fscanf(fp,"%d",&bids[bid_num].coal_blocks[k]);
            }
        }
    }
    //for (i=0;i<100;i++){
      //  printf("%d\n",bids[0].coal_blocks[i]);
    //}
    //printf("yo");
    // Creating a list of non overlapping bids
    int bid_value_per_block[no_bids], *non_conflicting_bids[no_bids];
    int *tempo;
    tempo=malloc(1000*200*sizeof(int));
    //printf("1s");
    k=0;// Index where the non conflicting bid has to be stored
    for (i=0;i<no_bids;i++){
        non_conflicting_bids[i]=tempo+k;
        //printf ("start %d %d\n",bids_start_companies[bids[i].company_name],bids[i].company_name);
        //printf("2s");
        for (j=0;j<no_bids;j++){
            if(j<bids_start_companies[bids[i].company_name]||(bids[i].company_name+1<no_companies&&j>=bids_start_companies[bids[i].company_name+1])){
                //printf ("3s\n");
                test = compare(bids[i].coal_blocks,bids[j].coal_blocks,bids[i].num_coal_blocks,bids[j].num_coal_blocks);
                if (test !=0){
                    tempo[k] = j;
                    k++;

                    printf("%d %d\n",i,j);
                }
            }
        }
        tempo[k] = -1;
        k++;
    }
    k-=no_bids;
    printf("\n%d\n",k);
    for(i=0;i<no_bids;i++){
        free(bids[i].coal_blocks);
    }
    free(tempo);
    fclose(fp);
}
