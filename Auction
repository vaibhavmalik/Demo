#include <stdio.h>
#include<time.h>
#include<stdlib.h>
struct bid_struct {
    //should start from 0
    int company_name;

    int num_coal_blocks;
    //just the value
    int bid_value;
    //i dont have anything to comment
    //coal block numbering start from 1
    int *coal_blocks;
};
//returns y if they conflict and n if they dont
char compare(int a[],int b[],int m,int n){

    int i,j;
    for (i=0,j=0;i<m&&j<n;){
            if (a[i]==b[j])return 'y';
            else if(a[i]>=b[j])j++;
            else i++;
    }
    return 'n';
}

void main(){
    srand(time(NULL));

    //for file input
    char filename[255];
    scanf("%s",filename);
    FILE *fp;
    fp=fopen(filename,"r");
    // file now stored in fp
    int time_limit,number_of_coal_blocks,number_of_bids,number_of_companies;
    fscanf(fp,"%d %d %d %d",&time_limit,&number_of_coal_blocks,&number_of_bids,&number_of_companies);
    time_limit*=60;
    //converting time to seconds
    int test;

    int bids_from_companies[number_of_companies],starting_bid_number_of_companies[number_of_companies];
    int i=0,j=0,k=0,temp,bid_num;
    struct bid_struct bids[number_of_bids];
    //allocating memory to pointers in struct
    for(i=0;i<number_of_bids;i++){
        bids[i].coal_blocks=malloc(number_of_coal_blocks*sizeof(int));
    }
    starting_bid_number_of_companies[0]=0;
    //input
    for(i=0;i<number_of_companies;i++){
        fscanf(fp,"%d %d",&temp,&bids_from_companies[i]);
        if(i+1<number_of_companies){
            starting_bid_number_of_companies[i+1]=starting_bid_number_of_companies[i]+bids_from_companies[i];
        }
        for(j=0;j<bids_from_companies[i];j++){
            bid_num=starting_bid_number_of_companies[i]+j;
            fscanf(fp,"%d %d %d",&bids[bid_num].company_name,&bids[bid_num].num_coal_blocks,&bids[bid_num].bid_value);
            bids[bid_num].company_name=bids[bid_num].company_name-1;
            for(k=0;k<bids[bid_num].num_coal_blocks;k++){
                fscanf(fp,"%d",&bids[bid_num].coal_blocks[k]);
            }
        }
    }


    int temp5,temp6;
    char *conflict_checker=malloc(number_of_bids*number_of_bids*sizeof(char));


    for(i=0;i<number_of_bids;i++){
        conflict_checker[i*number_of_bids+i]='y';
        temp6=starting_bid_number_of_companies[bids[i].company_name]+bids_from_companies[bids[i].company_name];
        //printf("%d %d\n",i,temp6);
        for(j=i+1;j<temp6;j++){
            conflict_checker[i*number_of_bids+j]='y';
            conflict_checker[j*number_of_bids+i]='y';
        }
        for(j=temp6;j<number_of_bids;j++){
            temp5=compare(bids[i].coal_blocks,bids[j].coal_blocks,bids[i].num_coal_blocks,bids[j].num_coal_blocks);
            conflict_checker[i*number_of_bids+j]=temp5;
            conflict_checker[j*number_of_bids+i]=temp5;
        }
    }

    int solution[number_of_companies];
    int conflicts_of_solution_bid[number_of_companies];
    int r;
    for(i=0;i<number_of_companies;i++){
        if(bids_from_companies[i]!=0){
            r=rand()%bids_from_companies[i];
            solution[i]=starting_bid_number_of_companies[i]+r;
        }else{solution[i]=-1;}
        conflicts_of_solution_bid[i]=0;
    }

    for(i=0;i<number_of_companies;i++){
        if(solution[i]==-1)continue;
        for(j=i+1;j<number_of_companies;j++){
            if(solution[i]!=-1&&conflict_checker[solution[i]*number_of_bids+solution[j]]=='y'){
                conflicts_of_solution_bid[i]+=1;
                conflicts_of_solution_bid[j]+=1;
            }
        }
    }
    int number_current_conflicts;
    int improved_conflicts,neighbour_number;
    int boo;
    int counter,temp15[number_of_companies],temp16,temp17;
    do{
        boo=0;
        improved_conflicts=0,neighbour_number=-1;
        for(i=0;i<number_of_companies;i++){
            for(j=starting_bid_number_of_companies[i];j<starting_bid_number_of_companies[i]+bids_from_companies[i];j++){
                if(j!=solution[i]){
                    number_current_conflicts=0;
                    for(k=0;k<number_of_companies;k++){
                        if(k!=i&&solution[k]!=-1){
                            if(conflict_checker[j*number_of_bids+solution[k]]=='y'){
                                number_current_conflicts++;
                            }
                        }
                    }
                    if(number_current_conflicts<=conflicts_of_solution_bid[i]){
                        if(improved_conflicts<conflicts_of_solution_bid[i]-number_current_conflicts){
                            improved_conflicts=conflicts_of_solution_bid[i]-number_current_conflicts;
                            neighbour_number=j;
                        }else if(improved_conflicts==conflicts_of_solution_bid[i]-number_current_conflicts){
                            if(neighbour_number==-1||bids[neighbour_number].bid_value<bids[j].bid_value){
                                neighbour_number=j;
                            }
                        }
                    }
                }
            }

        }

        if(improved_conflicts>0){
            boo=1;
            int temp7=bids[neighbour_number].company_name;
            solution[temp7]=neighbour_number;
            for(i=0;i<number_of_companies;i++){
                conflicts_of_solution_bid[i]=0;
            }
            for(i=0;i<number_of_companies;i++){
                if(solution[i]==-1)continue;
                for(j=i+1;j<number_of_companies;j++){
                    if(solution[i]==-1)continue;
                    if(conflict_checker[solution[i]*number_of_bids+solution[j]]=='y'){
                        conflicts_of_solution_bid[i]+=1;
                        conflicts_of_solution_bid[j]+=1;
                    }
                }
            }
            for(i=0;i<number_of_companies;i++){
          //      printf("%d ",solution[i]);
            }
        //    printf("\n");
          //  for(i=0;i<number_of_companies;i++){
           //     printf("%d ",conflicts_of_solution_bid[i]);
          //  }
           // printf("\n");
          //  printf("%d\n",improved_conflicts);
        }else if(improved_conflicts==0&&neighbour_number!=-1&&bids[neighbour_number].bid_value>bids[solution[bids[neighbour_number].company_name]].bid_value){

            boo=1;
          //  printf("hey");
            int temp7=bids[neighbour_number].company_name;
            solution[temp7]=neighbour_number;
            for(i=0;i<number_of_companies;i++){
                conflicts_of_solution_bid[i]=0;
            }
            for(i=0;i<number_of_companies;i++){
                if(solution[i]==-1)continue;
                for(j=i+1;j<number_of_companies;j++){
                    if(solution[i]==-1)continue;
                    if(conflict_checker[solution[i]*number_of_bids+solution[j]]=='y'){
                        conflicts_of_solution_bid[i]+=1;
                        conflicts_of_solution_bid[j]+=1;
                    }
                }
            }
            for(i=0;i<number_of_companies;i++){
           //     printf("%d ",solution[i]);
            }
          //  printf("\n");
            for(i=0;i<number_of_companies;i++){
              //  printf("%d ",conflicts_of_solution_bid[i]);
            }
         //   printf("\n");
          //  printf("%d\n",improved_conflicts);

        }else{
          //  printf("mic check");
            counter=0;
            for(i=0;i<number_of_companies;i++){
                counter+=conflicts_of_solution_bid[i];
            }
            if(counter!=0){
                    boo=1;
                temp16=32000;
                for(i=0;i<number_of_companies;i++){
                    if(conflicts_of_solution_bid[i]!=0){
                        temp15[i]=bids[i].bid_value/conflicts_of_solution_bid[i];
                    }else{temp15[i]=32000;}
                    if(temp15[i]<temp16){
                        temp16=temp15[i];
                        temp17=i;
                    }
                }
                solution[temp17]=-1;
                for(i=0;i<number_of_companies;i++){
                    conflicts_of_solution_bid[i]=0;
                }
                for(i=0;i<number_of_companies;i++){
                    if(solution[i]==-1)continue;
                    for(j=i+1;j<number_of_companies;j++){
                        if(solution[i]==-1)continue;
                        if(conflict_checker[solution[i]*number_of_bids+solution[j]]=='y'){
                            conflicts_of_solution_bid[i]+=1;
                            conflicts_of_solution_bid[j]+=1;
                        }
                    }
                }

            }
        }
    }while(boo);
    int result=0;
     for(i=0;i<number_of_companies;i++){
            //printf("%d %d\n",solution[i],conflicts_of_solution_bid[i]);
            if(solution[i]!=-1){
                result+=bids[solution[i]].bid_value;
            }
           // printf("oh cmon");
    }
    printf("result = %d\n",result);
    //free everything
    for(i=0;i<number_of_bids;i++){
        free(bids[i].coal_blocks);
    }
    free(conflict_checker);
    fclose(fp);
}
